# more info see official docs: https://github.com/cypress-io/github-action
name: E2E Cypress Test Manual
on:
  workflow_dispatch:
    inputs:
      spec_file:
        description: 'Path to spec file'
        required: true
        default: 'cypress/e2e/daily_regression/sidebar/konsep_naskah/surat_biasa/penomoran_otomatis.cy.js'
        type: string
      tester_name:
        description: 'Name of the person who run this test'
        required: true
        type: string

jobs:
  cypress-run:
    runs-on: self-hosted
    container: 
      image: cypress/included:11.2.0
      # solution from https://github.com/cypress-io/cypress-docker-images/issues/560#issuecomment-1121774167
      options: --user 1001
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # bisa disesuaikan kalau ada banyak fixture lain. jangan lupa tambahkan di setting env repo
      - name: 'Create credential fixture'
        run: |
          mkdir cypress/fixtures
          echo "${{ secrets.CREDENTIALS_DEV_JSON_CONTENT }}" | base64 --decode > cypress/fixtures/credentials_dev.json
          echo "${{ secrets.CREDENTIALS_PROD_JSON_CONTENT }}" | base64 --decode > cypress/fixtures/credentials_prod.json
          
      # Install npm dependencies, cache them correctly
      # and run all Cypress tests
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          # sesuaikan
          browser: chrome
          record: true
          spec: ${{ inputs.spec_file }}
        # sesuaikan kalau ada env lain
        env:
          # override cypress binary cache location. ref: https://docs.cypress.io/guides/references/advanced-installation#Binary-cache
          # latest solution from https://github.com/cypress-io/cypress-docker-images/issues/560#issuecomment-1121774167
          CYPRESS_CACHE_FOLDER: "${GITHUB_WORKSPACE}/.cypress-cache"
          # pass the Cypress Cloud record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # pass the project ID from the secrets through environment variable
          # CYPRESS_PROJECT_ID: ${{ secrets.PROJECT_ID }}
          # 1: staging
          QASE_REPORT: 1
          QASE_RUN_NAME: "${{ github.event.repository.updated_at}} - Run test github action ${{ inputs.tester_name }}"
          # QASE_API_KEY: ${{ secrets.QASE_API_KEY }}
          
